(()=>{"use strict";const e=async function(e,t){try{const n=`http://api.openweathermap.org/data/2.5/weather?q=${e}&APPID=2856f7800e7e860f5f68bc404924d79f&units=${t}`,o=await fetch(n,{mode:"cors"});if(!o.ok)throw new Error("Location not found");return function(e){const{name:t,weather:[{main:n,icon:o}],main:{temp:c,feels_like:r,temp_min:i,temp_max:u,humidity:a,pressure:m},wind:{speed:d}}=e;return{city:t,main:n,icon:o,temperature:c,feels:r,low:i,high:u,humidity:a,pressure:m,windSpeed:d}}(await o.json())}catch(e){return alert(e),null}};function t(e){const t=document.querySelector(".city"),n=document.querySelector(".main-temp"),o=document.querySelector(".weather-main"),c=document.querySelector(".high-low"),r=document.querySelector(".main-image"),i=document.createElement("img"),u=document.querySelector(".feels"),a=document.querySelector(".humidity"),m=document.querySelector(".wind"),d=document.querySelector(".pressure");t.textContent=e.city,n.textContent=`${e.temperature}째`,o.textContent=e.main,c.textContent=`H: ${e.high}째 L: ${e.low}째`,i.src=`http://openweathermap.org/img/wn/${e.icon}@2x.png`,u.textContent=`${e.feels}째`,a.textContent=`${e.humidity}%`,m.textContent=`${Math.round(3.6*e.windSpeed)} km/h`,d.textContent=`${e.pressure} hPa`,r.innerHTML="",r.appendChild(i)}function n(){return document.querySelector('input[type="checkbox"').checked?"imperial":"metric"}const o=document.querySelector("button"),c=document.querySelector("#cityName"),r=document.querySelector("form"),i=document.querySelector('input[type="checkbox"]');r.addEventListener("submit",(e=>{e.preventDefault()})),o.addEventListener("click",(async()=>{const o=n();t(await e(c.value,o))})),document.addEventListener("DOMContentLoaded",(async()=>{const o=n();t(await e("Vancouver",o))})),i.addEventListener("click",(async()=>{const o=document.querySelector(".city").textContent;console.log(o);const c=n();t(await e(o,c))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoibUJBK0JBLFFBZkFBLGVBQThCQyxFQUFVQyxHQUNwQyxJQUNJLE1BQU1DLEVBQU0sb0RBQW9ERixrREFBeURDLElBQ25IRSxRQUFpQkMsTUFBTUYsRUFBSyxDQUFFRyxLQUFNLFNBQzFDLElBQUtGLEVBQVNHLEdBQ1YsTUFBTSxJQUFJQyxNQUFNLHNCQUdwQixPQXhCUixTQUEwQkMsR0FFdEIsTUFDSUMsS0FBTUMsRUFDTkMsVUFBVSxLQUFFQyxFQUFJLEtBQUVDLElBQ2xCRCxNQUNJRSxLQUFNQyxFQUFhQyxXQUFZQyxFQUFPQyxTQUFVQyxFQUFLQyxTQUFVQyxFQUFJLFNBQUVDLEVBQVEsU0FBRUMsR0FFbkZDLE1BQVFDLE1BQU9DLElBQ2ZsQixFQUVKLE1BQU8sQ0FDSEUsT0FBTUUsT0FBTUMsT0FBTUUsY0FBYUUsUUFBT0UsTUFBS0UsT0FBTUMsV0FBVUMsV0FBVUcsWUFFN0UsQ0FTcUJDLE9BQXVCeEIsRUFBU3lCLE9BS2pELENBSEUsTUFBT0MsR0FFTCxPQURBQyxNQUFNRCxHQUNDLElBQ1gsQ0FDSixFQzdCQSxTQUFTRSxFQUFrQnZCLEdBQ3ZCLE1BQU1FLEVBQU9zQixTQUFTQyxjQUFjLFNBQzlCQyxFQUFXRixTQUFTQyxjQUFjLGNBQ2xDRSxFQUFjSCxTQUFTQyxjQUFjLGlCQUNyQ0csRUFBVUosU0FBU0MsY0FBYyxhQUNqQ0ksRUFBV0wsU0FBU0MsY0FBYyxlQUNsQ0ssRUFBVU4sU0FBU08sY0FBYyxPQUVqQ3RCLEVBQVFlLFNBQVNDLGNBQWMsVUFDL0JYLEVBQVdVLFNBQVNDLGNBQWMsYUFDbENULEVBQU9RLFNBQVNDLGNBQWMsU0FDOUJWLEVBQVdTLFNBQVNDLGNBQWMsYUFFeEN2QixFQUFLOEIsWUFBY2hDLEVBQUtFLEtBQ3hCd0IsRUFBU00sWUFBYyxHQUFHaEMsRUFBS08sZUFDL0JvQixFQUFZSyxZQUFjaEMsRUFBS0ksS0FDL0J3QixFQUFRSSxZQUFjLE1BQU1oQyxFQUFLYSxZQUFpQmIsRUFBS1csT0FDdkRtQixFQUFRRyxJQUFNLG9DQUFvQ2pDLEVBQUtLLGNBRXZESSxFQUFNdUIsWUFBYyxHQUFHaEMsRUFBS1MsU0FDNUJLLEVBQVNrQixZQUFjLEdBQUdoQyxFQUFLYyxZQUMvQkUsRUFBS2dCLFlBQWMsR0FBR0UsS0FBS0MsTUFBdUIsSUFBakJuQyxFQUFLa0Isa0JBQ3RDSCxFQUFTaUIsWUFBYyxHQUFHaEMsRUFBS2UsZUFFL0JjLEVBQVNPLFVBQVksR0FDckJQLEVBQVNRLFlBQVlQLEVBQ3pCLENBRUEsU0FBU1EsSUFFTCxPQURtQmQsU0FBU0MsY0FBYyx5QkFDMUJjLFFBR1QsV0FGSSxRQUdmLENDL0JBLE1BQU1DLEVBQU1oQixTQUFTQyxjQUFjLFVBQzdCZ0IsRUFBUWpCLFNBQVNDLGNBQWMsYUFDL0IsRUFBT0QsU0FBU0MsY0FBYyxRQUM5QmlCLEVBQVNsQixTQUFTQyxjQUFjLDBCQUV0QyxFQUFLa0IsaUJBQWlCLFVBQVdDLElBQzdCQSxFQUFFQyxnQkFBZ0IsSUFHdEJMLEVBQUlHLGlCQUFpQixTQUFTcEQsVUFDMUIsTUFBTUUsRUFBUTZDLElBRWRmLFFBRG1CLEVBQWVrQixFQUFNSyxNQUFPckQsR0FDeEIsSUFHM0IrQixTQUFTbUIsaUJBQWlCLG9CQUFvQnBELFVBQzFDLE1BQU1FLEVBQVE2QyxJQUVkZixRQURtQixFQUFlLFlBQWE5QixHQUN4QixJQUczQmlELEVBQU9DLGlCQUFpQixTQUFTcEQsVUFDN0IsTUFBTXdELEVBQWN2QixTQUFTQyxjQUFjLFNBQVNPLFlBQ3BEZ0IsUUFBUUMsSUFBSUYsR0FDWixNQUFNdEQsRUFBUTZDLElBRWRmLFFBRG1CLEVBQWV3QixFQUFhdEQsR0FDeEIsRyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYXRoZXItYXBwLy4vc3JjL3dlYXRoZXIuanMiLCJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvLi9zcmMvZG9tLmpzIiwid2VicGFjazovL3dlYXRoZXItYXBwLy4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGNsZWFuV2VhdGhlckRhdGEoZGF0YSkge1xuICAgIC8vIHVzaW5nIG9iamVjdCBkZXN0cnVjdHVyaW5nXG4gICAgY29uc3Qge1xuICAgICAgICBuYW1lOiBjaXR5LFxuICAgICAgICB3ZWF0aGVyOiBbeyBtYWluLCBpY29uIH1dLFxuICAgICAgICBtYWluOiB7XG4gICAgICAgICAgICB0ZW1wOiB0ZW1wZXJhdHVyZSwgZmVlbHNfbGlrZTogZmVlbHMsIHRlbXBfbWluOiBsb3csIHRlbXBfbWF4OiBoaWdoLCBodW1pZGl0eSwgcHJlc3N1cmUsXG4gICAgICAgIH0sXG4gICAgICAgIHdpbmQ6IHsgc3BlZWQ6IHdpbmRTcGVlZCB9LFxuICAgIH0gPSBkYXRhO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgY2l0eSwgbWFpbiwgaWNvbiwgdGVtcGVyYXR1cmUsIGZlZWxzLCBsb3csIGhpZ2gsIGh1bWlkaXR5LCBwcmVzc3VyZSwgd2luZFNwZWVkLFxuICAgIH07XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGdldFdlYXRoZXJEYXRhKGxvY2F0aW9uLCB1bml0cykge1xuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHVybCA9IGBodHRwOi8vYXBpLm9wZW53ZWF0aGVybWFwLm9yZy9kYXRhLzIuNS93ZWF0aGVyP3E9JHtsb2NhdGlvbn0mQVBQSUQ9Mjg1NmY3ODAwZTdlODYwZjVmNjhiYzQwNDkyNGQ3OWYmdW5pdHM9JHt1bml0c31gO1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHVybCwgeyBtb2RlOiAnY29ycycgfSk7XG4gICAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignTG9jYXRpb24gbm90IGZvdW5kJyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZGF0YSA9IGNsZWFuV2VhdGhlckRhdGEoYXdhaXQgcmVzcG9uc2UuanNvbigpKTtcbiAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgYWxlcnQoZXJyb3IpOyAvLyBmdXR1cmU6IGNyZWF0ZSBsZXNzIGludHJ1c2l2ZSBlcnJvclxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGdldFdlYXRoZXJEYXRhO1xuIiwiZnVuY3Rpb24gcmVuZGVyV2VhdGhlckRhdGEoZGF0YSkge1xuICAgIGNvbnN0IGNpdHkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY2l0eScpO1xuICAgIGNvbnN0IG1haW5UZW1wID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1haW4tdGVtcCcpO1xuICAgIGNvbnN0IG1haW5XZWF0aGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLndlYXRoZXItbWFpbicpO1xuICAgIGNvbnN0IGhpZ2hMb3cgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuaGlnaC1sb3cnKTtcbiAgICBjb25zdCBtYWluSWNvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tYWluLWltYWdlJyk7XG4gICAgY29uc3QgaW1nSWNvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xuXG4gICAgY29uc3QgZmVlbHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZmVlbHMnKTtcbiAgICBjb25zdCBodW1pZGl0eSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5odW1pZGl0eScpO1xuICAgIGNvbnN0IHdpbmQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcud2luZCcpO1xuICAgIGNvbnN0IHByZXNzdXJlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByZXNzdXJlJyk7XG5cbiAgICBjaXR5LnRleHRDb250ZW50ID0gZGF0YS5jaXR5O1xuICAgIG1haW5UZW1wLnRleHRDb250ZW50ID0gYCR7ZGF0YS50ZW1wZXJhdHVyZX1cXHUwMEIwYDtcbiAgICBtYWluV2VhdGhlci50ZXh0Q29udGVudCA9IGRhdGEubWFpbjtcbiAgICBoaWdoTG93LnRleHRDb250ZW50ID0gYEg6ICR7ZGF0YS5oaWdofVxcdTAwQjAgTDogJHtkYXRhLmxvd31cXHUwMEIwYDtcbiAgICBpbWdJY29uLnNyYyA9IGBodHRwOi8vb3BlbndlYXRoZXJtYXAub3JnL2ltZy93bi8ke2RhdGEuaWNvbn1AMngucG5nYDtcblxuICAgIGZlZWxzLnRleHRDb250ZW50ID0gYCR7ZGF0YS5mZWVsc31cXHUwMEIwYDtcbiAgICBodW1pZGl0eS50ZXh0Q29udGVudCA9IGAke2RhdGEuaHVtaWRpdHl9JWA7XG4gICAgd2luZC50ZXh0Q29udGVudCA9IGAke01hdGgucm91bmQoZGF0YS53aW5kU3BlZWQgKiAzLjYpfSBrbS9oYDtcbiAgICBwcmVzc3VyZS50ZXh0Q29udGVudCA9IGAke2RhdGEucHJlc3N1cmV9IGhQYWA7XG5cbiAgICBtYWluSWNvbi5pbm5lckhUTUwgPSAnJztcbiAgICBtYWluSWNvbi5hcHBlbmRDaGlsZChpbWdJY29uKTtcbn1cblxuZnVuY3Rpb24gY2hlY2tVbml0KCkge1xuICAgIGNvbnN0IHVuaXRTbGlkZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdpbnB1dFt0eXBlPVwiY2hlY2tib3hcIicpO1xuICAgIGlmICghdW5pdFNsaWRlci5jaGVja2VkKSB7XG4gICAgICAgIHJldHVybiAnbWV0cmljJztcbiAgICB9XG4gICAgcmV0dXJuICdpbXBlcmlhbCc7XG59XG5cbmV4cG9ydCB7IHJlbmRlcldlYXRoZXJEYXRhLCBjaGVja1VuaXQgfTtcbiIsImltcG9ydCBnZXRXZWF0aGVyRGF0YSBmcm9tICcuL3dlYXRoZXInO1xuaW1wb3J0IHsgcmVuZGVyV2VhdGhlckRhdGEsIGNoZWNrVW5pdCB9IGZyb20gJy4vZG9tJztcblxuY29uc3QgYnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignYnV0dG9uJyk7XG5jb25zdCBpbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNjaXR5TmFtZScpO1xuY29uc3QgZm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2Zvcm0nKTtcbmNvbnN0IHNsaWRlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2lucHV0W3R5cGU9XCJjaGVja2JveFwiXScpO1xuXG5mb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIChlKSA9PiB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xufSk7XG5cbmJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCB1bml0cyA9IGNoZWNrVW5pdCgpO1xuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBnZXRXZWF0aGVyRGF0YShpbnB1dC52YWx1ZSwgdW5pdHMpO1xuICAgIHJlbmRlcldlYXRoZXJEYXRhKGRhdGEpO1xufSk7XG5cbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCBhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgdW5pdHMgPSBjaGVja1VuaXQoKTtcbiAgICBjb25zdCBkYXRhID0gYXdhaXQgZ2V0V2VhdGhlckRhdGEoJ1ZhbmNvdXZlcicsIHVuaXRzKTtcbiAgICByZW5kZXJXZWF0aGVyRGF0YShkYXRhKTtcbn0pO1xuXG5zbGlkZXIuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgY3VycmVudENpdHkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY2l0eScpLnRleHRDb250ZW50O1xuICAgIGNvbnNvbGUubG9nKGN1cnJlbnRDaXR5KTtcbiAgICBjb25zdCB1bml0cyA9IGNoZWNrVW5pdCgpO1xuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBnZXRXZWF0aGVyRGF0YShjdXJyZW50Q2l0eSwgdW5pdHMpO1xuICAgIHJlbmRlcldlYXRoZXJEYXRhKGRhdGEpO1xufSk7XG4iXSwibmFtZXMiOlsiYXN5bmMiLCJsb2NhdGlvbiIsInVuaXRzIiwidXJsIiwicmVzcG9uc2UiLCJmZXRjaCIsIm1vZGUiLCJvayIsIkVycm9yIiwiZGF0YSIsIm5hbWUiLCJjaXR5Iiwid2VhdGhlciIsIm1haW4iLCJpY29uIiwidGVtcCIsInRlbXBlcmF0dXJlIiwiZmVlbHNfbGlrZSIsImZlZWxzIiwidGVtcF9taW4iLCJsb3ciLCJ0ZW1wX21heCIsImhpZ2giLCJodW1pZGl0eSIsInByZXNzdXJlIiwid2luZCIsInNwZWVkIiwid2luZFNwZWVkIiwiY2xlYW5XZWF0aGVyRGF0YSIsImpzb24iLCJlcnJvciIsImFsZXJ0IiwicmVuZGVyV2VhdGhlckRhdGEiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJtYWluVGVtcCIsIm1haW5XZWF0aGVyIiwiaGlnaExvdyIsIm1haW5JY29uIiwiaW1nSWNvbiIsImNyZWF0ZUVsZW1lbnQiLCJ0ZXh0Q29udGVudCIsInNyYyIsIk1hdGgiLCJyb3VuZCIsImlubmVySFRNTCIsImFwcGVuZENoaWxkIiwiY2hlY2tVbml0IiwiY2hlY2tlZCIsImJ0biIsImlucHV0Iiwic2xpZGVyIiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJwcmV2ZW50RGVmYXVsdCIsInZhbHVlIiwiY3VycmVudENpdHkiLCJjb25zb2xlIiwibG9nIl0sInNvdXJjZVJvb3QiOiIifQ==